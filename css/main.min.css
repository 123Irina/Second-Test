/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */@import url(https://fonts.googleapis.com/css?family=Open+Sans|Source+Sans+Pro);html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}@font-face{font-family:DejaVuSans;src:url(../fonts/DejaVuSans.ttf) format("truetype");font-family:DejaVuSans-bold;src:url(../fonts/DejaVuSans-Bold.ttf) format("truetype")}*{box-sizing:border-box}a{text-decoration:none;color:#fff}h1,h2{text-transform:uppercase}h2{font-family:"Source Sans Pro",sans-serif;font-weight:300;margin-bottom:35px;color:#333b46;text-align:center;font-size:20px;letter-spacing:4px}p{font-family:"Open Sans",sans-serif;letter-spacing:1px;text-align:center;margin:0 auto;max-width:492px;font-size:14px;line-height:25px;color:#81868e}ul{list-style:none}li{display:inline-block}img{display:block;max-width:100%}.clearfix:after{content:'';display:table;clear:both}header{text-align:center;background:url(../img/BG_1.jpg) no-repeat;background-size:cover;color:#fff;min-height:740px;padding-top:40px;position:relative}header nav{max-width:1175px;margin:0 auto}header nav h1{float:left;font-size:24px;font-family:DejaVuSans-bold,sans-serif}header nav ul{float:right;font-family:"Open Sans",sans-serif;padding-left:0}header nav ul li{min-width:80px;margin-right:30px;line-height:33px;border:1px solid transparent;border-radius:16px}header nav ul li:last-child{margin-right:0}header nav ul li:hover{border:1px solid #fff}header h2{font-size:35px;letter-spacing:7px;line-height:70px;margin-top:215px;color:#fff}header p{max-width:624px;font-size:16px;line-height:28px;color:#fff}header a.slide_down{display:block;background:url(../img/header_slide.png);height:38px;width:38px;margin:0 auto;position:absolute;bottom:75px;right:48%}section.portfolio{background-color:#f3f3f3;padding:88px 9% 100px}section.portfolio p{margin-bottom:80px}section.portfolio .button-group{margin:0 auto 60px;max-width:375px;font-size:0}section.portfolio button{padding:0 0 15px;border:none;border-bottom:1.5px solid transparent;background:0 0;text-align:center;font-size:16px;color:#464646;font-family:"Open Sans",sans-serif;margin-right:30px}section.portfolio button:last-child{margin-right:0}section.portfolio button:active,section.portfolio button:focus{outline:0}section.portfolio button.is-checked{border-bottom:1.5px solid #19bd99}section.portfolio .element-item{border:5px solid #f3f3f3;width:270px}.slick-dots li button{width:10px;height:10px;border-radius:5px;border:1px solid #19bd99}.slick-dots li button:before{opacity:0;color:transparent}.slick-dots li.slick-active button{background-color:#19bd99}.slick-dots li.slick-active button:before{opacity:0}section.TheTeam p{margin-bottom:60px}section.TheTeam .slick-slider{margin-bottom:100px}section.TheTeam .slick-slider .slide .forSlides{display:flex;justify-content:space-between;max-width:1024px;margin:0 auto;padding-bottom:55px}section.TheTeam .slick-slider .slide .forSlides .text{text-align:right;padding-right:45px}section.TheTeam .slick-slider .slide .forSlides .text h3,section.TheTeam .slick-slider .slide .forSlides .text h4{border-right:4px solid #19bd99;margin-right:-45px;padding-right:41px}section.TheTeam .slick-slider .slide .forSlides .text h3{font-size:20px;line-height:36px;letter-spacing:1px;color:#464646;font-family:"Open Sans",sans-serif;font-weight:300;margin-bottom:0;margin-top:30px}section.TheTeam .slick-slider .slide .forSlides .text h4{font-size:14px;letter-spacing:1px;color:#81868e;font-family:"Source Sans Pro",sans-serif;font-weight:300;font-style:italic;text-align:right;text-transform:uppercase;margin-top:0;margin-bottom:30px}section.TheTeam .slick-slider .slide .forSlides .text p{max-width:373px;font-size:14px;line-height:25px;color:#81868e;text-align:right;letter-spacing:.5px}.TeamDown{color:#fff;background:url(../img/bg_team_down.png) no-repeat;background-size:cover;padding:57px}.TeamDown p{font-size:20px;line-height:25px;color:#fff;margin-bottom:35px}.TeamDown a{font-size:16px;line-height:37px;display:block;margin:0 auto;font-family:"Open Sans",sans-serif;text-align:center;width:140px;border-radius:19px;background-color:transparent;border:1px solid #fff}.testimonilas{padding-top:80px;padding-bottom:100px;background-color:#f3f3f3}.testimonilas .containerForSecondSlider{background-color:#fff;padding-bottom:60px;max-width:1170px;margin:0 auto}.testimonilas h2{color:#333b46}.testimonilas p{color:#81868e;margin-bottom:60px}.slider_2{display:flex;justify-content:space-between;max-width:100%;background-color:#fff;padding:52px 95px 0}.slider_2 img{width:130px;height:130px}.slider_2 .text p{max-width:757px;letter-spacing:1px;line-height:28px;color:#81868e;font-family:"Open Sans",sans-serif;text-align:left;font-size:16px;margin-bottom:0}.slider_2 .text p:nth-child(2){color:#19bd9a;font-weight:700;margin-top:20px}.slider_2 .text p:nth-child(3){font-size:14px;line-height:20px;color:#464646;margin-bottom:45px}section.contact{padding-top:75px}section.contact p{margin-bottom:70px}section.contact #map{min-height:440px;max-width:100%;margin:0 auto;border:1px solid grey}footer{padding:70px 0}footer h5{text-transform:uppercase;font-family:DejaVuSans-bold,sans-serif;font-weight:900;text-align:center;font-size:24px;color:#000}footer p{margin-bottom:40px}footer ul{max-width:175px;margin:0 auto;padding:0;font-size:0}footer ul li{display:inline-block;width:26px;height:26px;margin-right:10px}footer ul li:nth-child(1){background-image:url(../img/icon_footer_faceb.png)}footer ul li:nth-child(2){background-image:url(../img/icon_footer_twit.png)}footer ul li:nth-child(3){background-image:url(../img/icon_footer_in.png)}footer ul li:nth-child(4){background-image:url(../img/icon_footer_insta.png)}footer ul li:nth-child(5){background-image:url(../img/icon_footer_v.png);margin-right:0}footer ul li a{display:block;height:100%}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
